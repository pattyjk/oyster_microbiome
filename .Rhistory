# double-check that the mapping file and otu table
# had overlapping samples
if(length(common.sample.ids) <= 1) {
message <- paste(sprintf('Error: there are %d sample ids in common '),
'between the metadata file and data table')
stop(message)
}
getwd()
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
plot(results, labels[test.ix], type='pie', include.legend=TRUE, env.colors=c('#47697E','#5B7444','#CC6666','#79BEDB','#885588'))
train.ix <- which(metadata$SourceSink=='Source')
test.ix <- which(metadata$SourceSink=='Sink')
plot(results, labels[test.ix], type='pie', include.legend=TRUE, env.colors=c('#47697E','#5B7444','#CC6666','#79BEDB','#885588'))
results$proportions
library(reshape2)
library(ggplot2)
proportions<-as.data.frame(results$proportions)
proportions_m<-melt(proportions)
View(proportions_m)
row.names(proportions)
proportions$SampleID<-row.names(proportions)
proportions_m<-melt(proportions)
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
metadata$SampleID
proportions_m<-merge(proportions_m, metadata, by='SampleID)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
str(proportions_m)
ggplot(proportions_m, aes(variable, value, fill=variable))+
geom_bar(stat='identity)
theme_bw()+
facet_wrap(~Location)
ggplot(proportions_m, aes(variable, value, fill=variable))+
geom_bar(stat='identity')
theme_bw()+
facet_wrap(~Location)
ggplot(proportions_m, aes(variable, value, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
facet_wrap(~Location)
library(plyr)
ggplot(proportions_m, aes(Sample_Type, value, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
facet_wrap(~Location)
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportions_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
facet_wrap(~Location)
ggplot(proportion_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
facet_wrap(~Location)
View(proportion_sum)
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
facet_wrap(~Location)
ggplot(proportion_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
coord_flip()+
facet_wrap(~Location, ncol=4)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$Sample_Type<-gsub("sed", "stuff", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("water", "sed", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("stuff", "water", proportions_m$Sample_Type)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
coord_flip()+
facet_wrap(~Location, ncol=4)
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$Sample_Type<-gsub("sed", "stuff", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("water", "sed", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("stuff", "water", proportions_m$Sample_Type)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Sample_Type, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
coord_flip()+
facet_wrap(~Location, ncol=4)
proportion_sum$variable
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$Sample_Type<-gsub("sed", "stuff", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("water", "sed", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("stuff", "water", proportions_m$Sample_Type)
proportions_m$variable<-gsub("sed", "stuff", proportions_m$variable)
proportions_m$variable<-gsub("water", "sed", proportions_m$variable)
proportions_m$variable<-gsub("stuff", "water", proportions_m$variable)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
coord_flip()+
facet_wrap(~Location, ncol=4)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$Sample_Type<-gsub("Sed", "stuff", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("WC", "Sed", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("stuff", "WC", proportions_m$Sample_Type)
proportions_m$variable<-gsub("Sed", "stuff", proportions_m$variable)
proportions_m$variable<-gsub("WC", "Sed", proportions_m$variable)
proportions_m$variable<-gsub("stuff", "WC", proportions_m$variable)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
View(proportion_sum)
proportions_m$variable
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$Sample_Type
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$variable<-gsub("Sed", "stuff", proportions_m$variable)
proportions_m$variable<-gsub("WC", "Sed", proportions_m$variable)
proportions_m$variable<-gsub("stuff", "WC", proportions_m$variable)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
proportion_sum<-ddply(proportions_m, c("Location", "variable"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
ggplot(proportion_sum, aes(Loation, mean, colour=variable))+
geom_point(position=position_dodge(0.3))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.3), width=.2)
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.3))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.3), width=.2)
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.3))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.3), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.3))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(0.3), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.5), aes(size=2))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(0.5), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()
proportion_sum
proportions_m
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_type)
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$variable<-gsub("Sed", "stuff", proportions_m$variable)
proportions_m$variable<-gsub("WC", "Sed", proportions_m$variable)
proportions_m$variable<-gsub("stuff", "WC", proportions_m$variable)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_type)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_Type)
results<-readRDS(file = "s_tracker_results.rds")
results.train<-readRDS(file='s_tracker_train.rds')
#extract proportions
proportions<-as.data.frame(results$proportions)
proportions$SampleID<-row.names(proportions)
library(reshape2)
library(ggplot2)
library(plyr)
#reshape data
proportions_m<-melt(proportions)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m<-merge(proportions_m, metadata, by='SampleID')
proportions_m$variable<-gsub("Sed", "stuff", proportions_m$variable)
proportions_m$variable<-gsub("WC", "Sed", proportions_m$variable)
proportions_m$variable<-gsub("stuff", "WC", proportions_m$variable)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_Type)
metadata$Sample_Type
proportions_m$Sample_Type
unique(proportions_m$Sample_Type)
proportions_m$Sample_Type
proportions_m$Sample_Type<-gsub("Sed", "Stomach", proportions_m$Sample_Type)
proportions_m$Sample_Type<-gsub("WC", "Gills", proportions_m$Sample_Type)
#summarize data
proportion_sum<-ddply(proportions_m, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
ggplot(proportion_sum, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_Type)
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.5), aes(size=2))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(0.5), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()+
facet_wrap(~Sample_Type)
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.5), aes(size=2))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.5), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()+
facet_wrap(~Sample_Type)
results$draws
results$samplenames
results$train.envs
results$proportions_sd
metadata <- read.table('data/map_source2.txt', sep='\t',h=T, row.names = 1)
otus <- read.table('data/core_otu_table.txt',sep='\t', header=T,row.names=1,check=F,skip=1,comment='')
View(otus)
otus <- read.table('data/core_otu_table.txt',sep='\t', header=T,row.names=1,check=F,comment='')
View(otus)
otus<-otus[,c(-1:2)]
otus<-otus[,c(-1,-2)]
View(otus)
if(length(common.sample.ids) <= 1) {
message <- paste(sprintf('Error: there are %d sample ids in common '),
'between the metadata file and data table')
stop(message)
}
train.ix <- which(metadata$SourceSink=='Source')
test.ix <- which(metadata$SourceSink=='Sink')
envs <- metadata$Env
if(is.element('Description',colnames(metadata))) desc <- metadata$Description
source('/home/pattyjk/Dropbox/GitHub/oyster_mucrobiome/sourcetracker-1.0.1/src/SourceTracker.r')
source('/home/pattyjk/Dropbox/GitHub/oyster_microbiome/sourcetracker-1.0.1/src/SourceTracker.r')
tune.results <- tune.st(otus[train.ix,], envs[train.ix])
alpha1 <- tune.results$best.alpha1
st <- sourcetracker(otus[train.ix,], envs[train.ix])
results <- predict(st,otus[test.ix,], alpha1=alpha1, alpha2=alpha2)
results2 <-results
st2 <-st
results.train2 <- predict(st2, alpha1=alpha1, alpha2=alpha2)
saveRDS(results2, file = "s_tracked_results_core.rds")
saveRDS(results.train2, file = "s_tracker_train_core.rds")
proportions2<-as.data.frame(results2$proportions)
proportions2$SampleID<-row.names(proportions2)
proportions2<-as.data.frame(results2$proportions)
proportions2$SampleID<-row.names(proportions2)
#reshape data
proportions_m2<-melt(proportions2)
#tack on metadata
metadata <- read.table('data/map_source2.txt', sep='\t', header=T)
proportions_m2<-merge(proportions_m2, metadata, by='SampleID')
proportion_sum2<-ddply(proportions_m2, c("Location", "variable", "Sample_Type"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
#plot data as barplot
ggplot(proportion_sum2, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")+
facet_wrap(~Sample_Type)
ggplot(proportion_sum2, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
proportion_sum2<-ddply(proportions_m2, c("Location", "variable"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
#plot data as barplot
ggplot(proportion_sum2, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
proportions_m2$variable<-gsub("WC", "stuff", proportions_m2$variable)
proportions_m2$variable<-gsub("Unknown", "WC", proportions_m2$variable)
proportions_m2$variable<-gsub("stuff", "Unknown", proportions_m2$variable)
#summarize data
proportion_sum2<-ddply(proportions_m2, c("Location", "variable"), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
#plot data as barplot
ggplot(proportion_sum2, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
ggplot(proportion_sum, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.5), aes(size=2))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.5), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()
ggplot(proportion_sum2, aes(Location, mean, colour=variable))+
geom_point(position=position_dodge(0.5), aes(size=2))+
theme_bw()+
theme(text = element_text(size=14),
axis.text = element_text(size=14), legend.text=element_text(size=14))+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), position=position_dodge(0.5), width=.2)+
ylab("Mean Proportion of the community")+
xlab("")+
coord_flip()
ggplot(proportion_sum2, aes(Location, mean, fill=variable))+
geom_bar(stat='identity')+
theme_bw()+
ylab("Proportion of Community")+
xlab("")
oyst_dis_bray<-read.delim('data/oyster_dist_bray2.txt', header=T)
oyst_dis_m<-melt(oyst_dis_bray)
pal<-c("#771155", "#CC99BB", "#114477", "#4477AA", "#117777", "#44AAAA", "#77CCCC", "#117744", "#44AA77", "#88CCAA", "#777711", "#AAAA44", "#DDDD77", "#774411", "#AA7744", "#DDAA77", "#771122", "#AA4455", "#DD7788","#41AB5D", "#252525", "#525252", "#737373", "#969696")
ggplot(oyst_dis_bray, aes(Habitats, Sim, fill=Habitats))+
geom_boxplot()+
theme_bw()+
facet_wrap(~Site)+
xlab('')+
ylab('Weighted UniFrac Similarity')+
theme(text = element_text(size=14),
axis.text.x = element_text(angle=45, hjust=1)) +
scale_fill_manual(values = pal)+
coord_cartesian(ylim=c(0,1))
View(oyst_dis_bray)
oyst_dis_sum<-ddply(oyst_dis_m, c('Habitats', 'Site'), summarize, mean=mean(Sim), sd=sd(sim), n=length(sim), se=sd/n)
oyst_dis_sum<-ddply(oyst_dis_m, c('Habitats', 'Site'), summarize, mean=mean(Sim), sd=sd(Sim), n=length(Sim), se=sd/n)
oyst_dis_sum<-ddply(oyst_dis_m, c('Habitats', 'Site'), summarize, mean=mean(value), sd=sd(value), n=length(value), se=sd/n)
write.table(oyst_dis_sum, "oyst_dis_sum.txt", quote=F, row.names=F, sep="\t")
per_ocu<-read.delim('data/per_ocu.txt', header=T)
library(ggplot2)
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=as.factor(per_ocu$No_Sites), shape=per_ocu$Site))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
theme_bw()+
scale_colour_manual(values=c('grey', 'black', 'orange'))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
ggtitle('By site')+
scale_shape_manual(values=c(19, 21,22,23,1,2,3))
View(per_ocu)
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=as.factor(per_ocu$No_Sites)))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
theme_bw()+
scale_colour_manual(values=c('blue', 'grey', 'black', 'orange', 'red'))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
ggtitle('By Habitat')
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=as.factor(per_ocu$No_Sites), shape=per_ocu$Site))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
theme_bw()+
scale_colour_manual(values=c('grey', 'black', 'orange'))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
ggtitle('By site')+
scale_shape_manual(values=c(19, 21,22,23,1,2,3))
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=as.factor(per_ocu$No_Sites), shape=per_ocu$Site))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
theme_bw()+
scale_colour_manual(values=c('grey', 'black', 'orange'))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
ggtitle('By site')
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=as.factor(per_ocu$No_Sites), shape=per_ocu$Site))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
theme_bw()+
scale_colour_manual(values=c('grey', 'black', 'orange', 'green'))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
ggtitle('By site')
ggplot(per_ocu, aes(per_ocu$Log_av_abun, per_ocu$Perc_occu, colour=Of_interest))+
geom_point(aes(size=1.2))+
coord_cartesian(ylim=c(0,1))+
ylab("Percent Occupany")+
xlab("Log10 Mean OTU Abundance")+
theme_bw()
